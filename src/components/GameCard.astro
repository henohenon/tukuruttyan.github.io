---
export interface Props {
  title: string;
  teamName: string;
  description: string;
  publishedDate: string;
  link?: string;
  thumbnailUrl?: string;
}

const { title, teamName, description, publishedDate, link, thumbnailUrl } = Astro.props;

// Simple markdown parser function
function parseMarkdown(text: string) {
  if (!text) return '';
  
  return text
    // Bold with **text** or __text__
    .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
    .replace(/__(.*?)__/g, '<strong>$1</strong>')
    // Italic with *text* or _text_ (but not inside bold)
    .replace(/(?<!\*)\*([^*]+?)\*(?!\*)/g, '<em>$1</em>')
    .replace(/(?<!_)_([^_]+?)_(?!_)/g, '<em>$1</em>')
    // Links with [text](url)
    .replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2" target="_blank" rel="noopener noreferrer" class="text-blue-400 hover:text-blue-600 underline">$1</a>')
    // Line breaks (double line breaks become paragraphs)
    .replace(/\n\n/g, '</p><p>')
    // Single line breaks become <br>
    .replace(/\n/g, '<br>');
}

// Date formatting function
function formatDate(dateString: string) {
  if (!dateString) return '';
  
  // Handle "YYYY/MM/DD" format only
  const dateMatch = dateString.match(/^(\d{4})\/(\d{2})\/(\d{2})/);

  if (!dateMatch) return dateString; // Return original if format doesn't match

  const [, year, month, day] = dateMatch;

  // Format date only: "YYYY年MM月DD日"
  return `${year}年${month}月${day}日`;
}
---

<div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow relative">
  <div class="flex flex-col sm:flex-row">
    <!-- Thumbnail -->
    <div class="p-4 flex-shrink-0">
      {link ? (
        <a href={link} target="_blank" rel="noopener noreferrer" class="block">
          {thumbnailUrl ? (
            <img 
              src={thumbnailUrl} 
              alt={title}
              class="w-full aspect-video sm:w-96 sm:h-54 bg-gray-200 rounded-lg object-cover hover:opacity-90 transition-opacity cursor-pointer"
              loading="lazy"
            />
          ) : (
            <div class="w-full aspect-video sm:w-96 sm:h-54 bg-gray-200 flex items-center justify-center rounded-lg hover:bg-gray-300 transition-colors cursor-pointer">
              <span class="text-lg text-gray-400">サムネイル</span>
            </div>
          )}
        </a>
      ) : (
        thumbnailUrl ? (
          <img 
            src={thumbnailUrl} 
            alt={title}
            class="w-full aspect-video sm:w-96 sm:h-54 bg-gray-200 rounded-lg object-cover"
            loading="lazy"
          />
        ) : (
          <div class="w-full aspect-video sm:w-96 sm:h-54 bg-gray-200 flex items-center justify-center rounded-lg">
            <span class="text-lg text-gray-400">サムネイル</span>
          </div>
        )
      )}
    </div>
    <!-- Content -->
    <div class="flex-1 p-4 sm:p-6 pb-12 sm:pb-8">
      {link ? (
        <a href={link} target="_blank" rel="noopener noreferrer" class="no-underline">
          <h3 class="text-lg sm:text-xl font-semibold mb-2 text-blue-400 hover:text-blue-600 hover:underline cursor-pointer transition-colors">{title}</h3>
        </a>
      ) : (
        <h3 class="text-lg sm:text-xl font-semibold mb-2 text-gray-900">{title}</h3>
      )}
      <p class="text-sm text-gray-500 mb-2">{teamName}</p>
      <div class="text-sm text-gray-600 leading-relaxed" set:html={`<p>${parseMarkdown(description)}</p>`}></div>
    </div>
  </div>
  <!-- Publication date positioned at bottom-right -->
  <p class="text-xs text-gray-300 absolute bottom-2 right-4">掲載日: {formatDate(publishedDate)}</p>
</div>